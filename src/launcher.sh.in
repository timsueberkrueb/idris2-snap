#!/usr/bin/env bash

IDRIS2_VERSION=

set -e

# Set CHEZ to point to bundled scheme wrapper
# We use SNAP_INSTANCE_NAME to support parallel installs. We use `which` to get the absolute
# executable path since we cannot make any assumption about where the executable is located on
# different distros
CHEZ_EXEC="${SNAP_INSTANCE_NAME:-idris2}.chez"
export CHEZ="$(which $CHEZ_EXEC)"

# IDRIS2_PREFIX points to the ~/.idris2 folder in the home directory because
# the --install command uses this IDRIS2_PREFIX as the location for installing user libraries.
# The Idris installation (including the built-in libraries) that comes with the snap is read-only.
export IDRIS2_PREFIX="$HOME/.idris2"

# Path where user libraries for this specific Idris version will get installed to
DOT_IDRIS_USER_LIBS="$IDRIS2_PREFIX/$IDRIS2_VERSION"

# Create the ~/.idris2/<idris2-version> folder if it does not exist already.
# This is necessary because the Idris installation contained in the snap is read-only.
# User libraries will get installed to DOT_IDRIS_USER_LIBS.
if [ ! -d "$DOT_IDRIS_USER_LIBS" ]; then
    mkdir -p "$DOT_IDRIS_USER_LIBS"
fi

# Idris support in the home installation
export IDRIS2_DATA="$HOME/.idris2/$IDRIS2_VERSION/support:$IDRIS2_DATA"

# Idris support bundled with the snap
export IDRIS2_DATA="$SNAP/$IDRIS2_VERSION/support:$IDRIS2_DATA"
# Idris support libs required for chez codegen
export IDRIS2_LIBS="$SNAP/$IDRIS2_VERSION/lib:$IDRIS2_LIBS"
# Make Idris find packages that ship with the snap as well as user-installed ones
export IDRIS2_PACKAGE_PATH="$DOT_IDRIS_USER_LIBS:$SNAP/$IDRIS2_VERSION"

# Ensure Idris 2 finds the support library
export LD_LIBRARY_PATH=$SNAP/lib:$LD_LIBRARY_PATH

exec $SNAP/bin/chez --script $SNAP/bin/idris2_app/idris2.so $@
